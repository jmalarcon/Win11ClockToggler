<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>